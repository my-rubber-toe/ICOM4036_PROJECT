Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> KEYWORD
Rule 2     statement -> VARNAME EQUALS QUOTE VARNAME QUOTE
Rule 3     statement -> expression
Rule 4     expression -> INT
Rule 5     expression -> VARNAME

Terminals, with rules where they appear

EQUALS               : 2
INT                  : 4
KEYWORD              : 1
QUOTE                : 2 2
VARNAME              : 2 2 5
error                : 

Nonterminals, with rules where they appear

expression           : 3 0
statement            : 

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . KEYWORD
    (4) expression -> . INT
    (5) expression -> . VARNAME

    KEYWORD         shift and go to state 2
    INT             shift and go to state 3
    VARNAME         shift and go to state 4

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> KEYWORD .

    $end            reduce using rule 1 (expression -> KEYWORD .)


state 3

    (4) expression -> INT .

    $end            reduce using rule 4 (expression -> INT .)


state 4

    (5) expression -> VARNAME .

    $end            reduce using rule 5 (expression -> VARNAME .)

