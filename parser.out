Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> KEYWORD KEYWORD STRING
Rule 2     statement -> KEYWORD KEYWORD STRING QUOTE STRING QUOTE INT
Rule 3     statement -> KEYWORD STRING
Rule 4     statement -> STRING EQUALS INT
Rule 5     statement -> STRING EQUALS QUOTE STRING QUOTE
Rule 6     statement -> STRING KEYWORD STRING QUOTE STRING QUOTE
Rule 7     statement -> STRING KEYWORD STRING
Rule 8     statement -> STRING KEYWORD QUOTE STRING QUOTE KEYWORD INT
Rule 9     statement -> STRING KEYWORD QUOTE STRING QUOTE
Rule 10    statement -> expression
Rule 11    expression -> INT
Rule 12    expression -> KEYWORD
Rule 13    expression -> STRING

Terminals, with rules where they appear

EQUALS               : 4 5
INT                  : 2 4 8 11
KEYWORD              : 1 1 2 2 3 6 7 8 8 9 12
QUOTE                : 2 2 5 5 6 6 8 8 9 9
STRING               : 1 2 2 3 4 5 5 6 6 6 7 7 8 8 9 9 13
error                : 

Nonterminals, with rules where they appear

expression           : 10
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . KEYWORD KEYWORD STRING
    (2) statement -> . KEYWORD KEYWORD STRING QUOTE STRING QUOTE INT
    (3) statement -> . KEYWORD STRING
    (4) statement -> . STRING EQUALS INT
    (5) statement -> . STRING EQUALS QUOTE STRING QUOTE
    (6) statement -> . STRING KEYWORD STRING QUOTE STRING QUOTE
    (7) statement -> . STRING KEYWORD STRING
    (8) statement -> . STRING KEYWORD QUOTE STRING QUOTE KEYWORD INT
    (9) statement -> . STRING KEYWORD QUOTE STRING QUOTE
    (10) statement -> . expression
    (11) expression -> . INT
    (12) expression -> . KEYWORD
    (13) expression -> . STRING

    KEYWORD         shift and go to state 2
    STRING          shift and go to state 3
    INT             shift and go to state 4

    statement                      shift and go to state 1
    expression                     shift and go to state 5

state 1

    (0) S' -> statement .



state 2

    (1) statement -> KEYWORD . KEYWORD STRING
    (2) statement -> KEYWORD . KEYWORD STRING QUOTE STRING QUOTE INT
    (3) statement -> KEYWORD . STRING
    (12) expression -> KEYWORD .

    KEYWORD         shift and go to state 6
    STRING          shift and go to state 7
    $end            reduce using rule 12 (expression -> KEYWORD .)


state 3

    (4) statement -> STRING . EQUALS INT
    (5) statement -> STRING . EQUALS QUOTE STRING QUOTE
    (6) statement -> STRING . KEYWORD STRING QUOTE STRING QUOTE
    (7) statement -> STRING . KEYWORD STRING
    (8) statement -> STRING . KEYWORD QUOTE STRING QUOTE KEYWORD INT
    (9) statement -> STRING . KEYWORD QUOTE STRING QUOTE
    (13) expression -> STRING .

    EQUALS          shift and go to state 8
    KEYWORD         shift and go to state 9
    $end            reduce using rule 13 (expression -> STRING .)


state 4

    (11) expression -> INT .

    $end            reduce using rule 11 (expression -> INT .)


state 5

    (10) statement -> expression .

    $end            reduce using rule 10 (statement -> expression .)


state 6

    (1) statement -> KEYWORD KEYWORD . STRING
    (2) statement -> KEYWORD KEYWORD . STRING QUOTE STRING QUOTE INT

    STRING          shift and go to state 10


state 7

    (3) statement -> KEYWORD STRING .

    $end            reduce using rule 3 (statement -> KEYWORD STRING .)


state 8

    (4) statement -> STRING EQUALS . INT
    (5) statement -> STRING EQUALS . QUOTE STRING QUOTE

    INT             shift and go to state 11
    QUOTE           shift and go to state 12


state 9

    (6) statement -> STRING KEYWORD . STRING QUOTE STRING QUOTE
    (7) statement -> STRING KEYWORD . STRING
    (8) statement -> STRING KEYWORD . QUOTE STRING QUOTE KEYWORD INT
    (9) statement -> STRING KEYWORD . QUOTE STRING QUOTE

    STRING          shift and go to state 13
    QUOTE           shift and go to state 14


state 10

    (1) statement -> KEYWORD KEYWORD STRING .
    (2) statement -> KEYWORD KEYWORD STRING . QUOTE STRING QUOTE INT

    $end            reduce using rule 1 (statement -> KEYWORD KEYWORD STRING .)
    QUOTE           shift and go to state 15


state 11

    (4) statement -> STRING EQUALS INT .

    $end            reduce using rule 4 (statement -> STRING EQUALS INT .)


state 12

    (5) statement -> STRING EQUALS QUOTE . STRING QUOTE

    STRING          shift and go to state 16


state 13

    (6) statement -> STRING KEYWORD STRING . QUOTE STRING QUOTE
    (7) statement -> STRING KEYWORD STRING .

    QUOTE           shift and go to state 17
    $end            reduce using rule 7 (statement -> STRING KEYWORD STRING .)


state 14

    (8) statement -> STRING KEYWORD QUOTE . STRING QUOTE KEYWORD INT
    (9) statement -> STRING KEYWORD QUOTE . STRING QUOTE

    STRING          shift and go to state 18


state 15

    (2) statement -> KEYWORD KEYWORD STRING QUOTE . STRING QUOTE INT

    STRING          shift and go to state 19


state 16

    (5) statement -> STRING EQUALS QUOTE STRING . QUOTE

    QUOTE           shift and go to state 20


state 17

    (6) statement -> STRING KEYWORD STRING QUOTE . STRING QUOTE

    STRING          shift and go to state 21


state 18

    (8) statement -> STRING KEYWORD QUOTE STRING . QUOTE KEYWORD INT
    (9) statement -> STRING KEYWORD QUOTE STRING . QUOTE

    QUOTE           shift and go to state 22


state 19

    (2) statement -> KEYWORD KEYWORD STRING QUOTE STRING . QUOTE INT

    QUOTE           shift and go to state 23


state 20

    (5) statement -> STRING EQUALS QUOTE STRING QUOTE .

    $end            reduce using rule 5 (statement -> STRING EQUALS QUOTE STRING QUOTE .)


state 21

    (6) statement -> STRING KEYWORD STRING QUOTE STRING . QUOTE

    QUOTE           shift and go to state 24


state 22

    (8) statement -> STRING KEYWORD QUOTE STRING QUOTE . KEYWORD INT
    (9) statement -> STRING KEYWORD QUOTE STRING QUOTE .

    KEYWORD         shift and go to state 25
    $end            reduce using rule 9 (statement -> STRING KEYWORD QUOTE STRING QUOTE .)


state 23

    (2) statement -> KEYWORD KEYWORD STRING QUOTE STRING QUOTE . INT

    INT             shift and go to state 26


state 24

    (6) statement -> STRING KEYWORD STRING QUOTE STRING QUOTE .

    $end            reduce using rule 6 (statement -> STRING KEYWORD STRING QUOTE STRING QUOTE .)


state 25

    (8) statement -> STRING KEYWORD QUOTE STRING QUOTE KEYWORD . INT

    INT             shift and go to state 27


state 26

    (2) statement -> KEYWORD KEYWORD STRING QUOTE STRING QUOTE INT .

    $end            reduce using rule 2 (statement -> KEYWORD KEYWORD STRING QUOTE STRING QUOTE INT .)


state 27

    (8) statement -> STRING KEYWORD QUOTE STRING QUOTE KEYWORD INT .

    $end            reduce using rule 8 (statement -> STRING KEYWORD QUOTE STRING QUOTE KEYWORD INT .)

