Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> CREATE CLIENT STRING
Rule 2     statement -> DELETE CLIENT STRING
Rule 3     statement -> DELETE SERVER STRING
Rule 4     statement -> CREATE SERVER STRING DATA INT
Rule 5     statement -> CREATE SERVER STRING STRING INT
Rule 6     statement -> CREATE SERVER STRING
Rule 7     statement -> INFO STRING
Rule 8     statement -> STRING EQUALS DATA
Rule 9     statement -> STRING EQUALS INT
Rule 10    statement -> STRING SEND STRING DATA
Rule 11    statement -> STRING SEND STRING STRING
Rule 12    statement -> STRING CONNECT STRING
Rule 13    statement -> STRING CONNECT DATA

Terminals, with rules where they appear

CLIENT               : 1 2
CONNECT              : 12 13
CREATE               : 1 4 5 6
DATA                 : 4 8 10 13
DELETE               : 2 3
EQUALS               : 8 9
INFO                 : 7
INT                  : 4 5 9
SEND                 : 10 11
SERVER               : 3 4 5 6
STRING               : 1 2 3 4 5 5 6 7 8 9 10 10 11 11 11 12 12 13
error                : 

Nonterminals, with rules where they appear

statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . CREATE CLIENT STRING
    (2) statement -> . DELETE CLIENT STRING
    (3) statement -> . DELETE SERVER STRING
    (4) statement -> . CREATE SERVER STRING DATA INT
    (5) statement -> . CREATE SERVER STRING STRING INT
    (6) statement -> . CREATE SERVER STRING
    (7) statement -> . INFO STRING
    (8) statement -> . STRING EQUALS DATA
    (9) statement -> . STRING EQUALS INT
    (10) statement -> . STRING SEND STRING DATA
    (11) statement -> . STRING SEND STRING STRING
    (12) statement -> . STRING CONNECT STRING
    (13) statement -> . STRING CONNECT DATA

    CREATE          shift and go to state 2
    DELETE          shift and go to state 4
    INFO            shift and go to state 5
    STRING          shift and go to state 3

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> CREATE . CLIENT STRING
    (4) statement -> CREATE . SERVER STRING DATA INT
    (5) statement -> CREATE . SERVER STRING STRING INT
    (6) statement -> CREATE . SERVER STRING

    CLIENT          shift and go to state 6
    SERVER          shift and go to state 7


state 3

    (8) statement -> STRING . EQUALS DATA
    (9) statement -> STRING . EQUALS INT
    (10) statement -> STRING . SEND STRING DATA
    (11) statement -> STRING . SEND STRING STRING
    (12) statement -> STRING . CONNECT STRING
    (13) statement -> STRING . CONNECT DATA

    EQUALS          shift and go to state 8
    SEND            shift and go to state 9
    CONNECT         shift and go to state 10


state 4

    (2) statement -> DELETE . CLIENT STRING
    (3) statement -> DELETE . SERVER STRING

    CLIENT          shift and go to state 11
    SERVER          shift and go to state 12


state 5

    (7) statement -> INFO . STRING

    STRING          shift and go to state 13


state 6

    (1) statement -> CREATE CLIENT . STRING

    STRING          shift and go to state 14


state 7

    (4) statement -> CREATE SERVER . STRING DATA INT
    (5) statement -> CREATE SERVER . STRING STRING INT
    (6) statement -> CREATE SERVER . STRING

    STRING          shift and go to state 15


state 8

    (8) statement -> STRING EQUALS . DATA
    (9) statement -> STRING EQUALS . INT

    DATA            shift and go to state 16
    INT             shift and go to state 17


state 9

    (10) statement -> STRING SEND . STRING DATA
    (11) statement -> STRING SEND . STRING STRING

    STRING          shift and go to state 18


state 10

    (12) statement -> STRING CONNECT . STRING
    (13) statement -> STRING CONNECT . DATA

    STRING          shift and go to state 19
    DATA            shift and go to state 20


state 11

    (2) statement -> DELETE CLIENT . STRING

    STRING          shift and go to state 21


state 12

    (3) statement -> DELETE SERVER . STRING

    STRING          shift and go to state 22


state 13

    (7) statement -> INFO STRING .

    $end            reduce using rule 7 (statement -> INFO STRING .)


state 14

    (1) statement -> CREATE CLIENT STRING .

    $end            reduce using rule 1 (statement -> CREATE CLIENT STRING .)


state 15

    (4) statement -> CREATE SERVER STRING . DATA INT
    (5) statement -> CREATE SERVER STRING . STRING INT
    (6) statement -> CREATE SERVER STRING .

    DATA            shift and go to state 24
    STRING          shift and go to state 23
    $end            reduce using rule 6 (statement -> CREATE SERVER STRING .)


state 16

    (8) statement -> STRING EQUALS DATA .

    $end            reduce using rule 8 (statement -> STRING EQUALS DATA .)


state 17

    (9) statement -> STRING EQUALS INT .

    $end            reduce using rule 9 (statement -> STRING EQUALS INT .)


state 18

    (10) statement -> STRING SEND STRING . DATA
    (11) statement -> STRING SEND STRING . STRING

    DATA            shift and go to state 26
    STRING          shift and go to state 25


state 19

    (12) statement -> STRING CONNECT STRING .

    $end            reduce using rule 12 (statement -> STRING CONNECT STRING .)


state 20

    (13) statement -> STRING CONNECT DATA .

    $end            reduce using rule 13 (statement -> STRING CONNECT DATA .)


state 21

    (2) statement -> DELETE CLIENT STRING .

    $end            reduce using rule 2 (statement -> DELETE CLIENT STRING .)


state 22

    (3) statement -> DELETE SERVER STRING .

    $end            reduce using rule 3 (statement -> DELETE SERVER STRING .)


state 23

    (5) statement -> CREATE SERVER STRING STRING . INT

    INT             shift and go to state 27


state 24

    (4) statement -> CREATE SERVER STRING DATA . INT

    INT             shift and go to state 28


state 25

    (11) statement -> STRING SEND STRING STRING .

    $end            reduce using rule 11 (statement -> STRING SEND STRING STRING .)


state 26

    (10) statement -> STRING SEND STRING DATA .

    $end            reduce using rule 10 (statement -> STRING SEND STRING DATA .)


state 27

    (5) statement -> CREATE SERVER STRING STRING INT .

    $end            reduce using rule 5 (statement -> CREATE SERVER STRING STRING INT .)


state 28

    (4) statement -> CREATE SERVER STRING DATA INT .

    $end            reduce using rule 4 (statement -> CREATE SERVER STRING DATA INT .)

